<?php/*  ------------------------------------------------------------------------  Copyright (C) 2014 Bart Orriens, Albert Weerman  This library/program is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA  ------------------------------------------------------------------------ */require_once("common.php");class Config {    static private $table;        /* DATABASE */        static function dbSurvey() {        if (self::$table != "") {            return self::$table;        }        return dbConfig::dbSurvey();    }    static function dbSurveySet($table) {        self::$table = $table;    }    static function dbName() {        return dbConfig::dbName();    }    static function dbUser() {        return dbConfig::dbUser();    }    static function dbPassword() {        return dbConfig::dbPassword();    }    static function dbServer() {        return dbConfig::dbServer();    }    static function dbType() {        return dbConfig::dbType();    }    static function dbSurveyData() {        if (isset($_SESSION[SURVEY_EXECUTION_MODE])) {            switch ($_SESSION[SURVEY_EXECUTION_MODE]) {                case SURVEY_EXECUTION_MODE_NORMAL:                    return Config::dbSurvey();                case SURVEY_EXECUTION_MODE_TEST:                    return Config::dbSurvey() . "_test";                default:                    return Config::dbSurvey();            }        }        // not set, then assume normal mode        return Config::dbSurvey();    }    static function defaultStartup() {        return dbConfig::defaultStartup(); //default survey mode!    }        /* ENCRYPTION */        static function loginCodeKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_LOGINCODES);        //return 'F62ALrGJbXPNyHIvdx3mRGsqCWqqceTH';    }    static function smsPasswordKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_ADMIN);        //return 'xKMXoGUb6qZBYW2tqQ7oeJAYfHIPXPRm';    }    static function smsPersonalInfoKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_PERSONAL);        //return 'Mq9UVWRhi4WHzsMA76W47RnDAS8Y3eGG';    }    static function smsRemarkKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_REMARK);        //return 'LIrzR8WaqgMtYgw6zz5pmqSvpbAFrJh5';    }    static function smsContactRemarkKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_CONTACTREMARK);        //return 'qPYEvbFuuhLMrn9Mw2fGexgPafuKuqoJ';    }    static function smsContactNameKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_CONTACTNAME);        //return 'qPYEvbFuuhLMrn9Mw2fGexgPafuKuqoJ';    }    static function logActionParamsKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_ACTION_PARAMS);        //return 'MJfIq4ABQhRRIRbwuSQgHzIjDJ6ZjpyW';    }    static function dataEncryptionKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_DATA);        //return 'dataencryptionkey';    }    static function directLoginKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_DIRECT);        //return '43admafeifaqgfasdFDedfq34qfa#1sa';    }    static function labKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_LAB);        //return 'dfhuiyhreuhreyuery783464$#32234d';    }    static function filePictureKey() {        return dbConfig::getProperty(CONFIGURATION_ENCRYPTION, CONFIGURATION_ENCRYPTION_FILE);        //return '#$sdd7sf7467896578gfhfsd#tyioty3';    }        /* DATE/TIME */    static function timezone() {                //return "America/Los_Angeles";        return dbConfig::getProperty(CONFIGURATION_DATETIME, CONFIGURATION_DATETIME_TIMEZONE);    }    static function usFormatSMS() {        return dbConfig::getProperty(CONFIGURATION_DATETIME, CONFIGURATION_DATETIME_USFORMAT_SMS);                //return "true";    }    static function usFormatSurvey() {        return dbConfig::getProperty(CONFIGURATION_DATETIME, CONFIGURATION_DATETIME_USFORMAT_SURVEY);                //return "true";    }    static function secondsSMS() {        return dbConfig::getProperty(CONFIGURATION_DATETIME, CONFIGURATION_DATETIME_SECONDS_SMS);        //return "true";    }    static function secondsSurvey() {        return dbConfig::getProperty(CONFIGURATION_DATETIME, CONFIGURATION_DATETIME_SECONDS_SURVEY);        //return "true";    }    static function minutesSMS() {        return dbConfig::getProperty(CONFIGURATION_DATETIME, CONFIGURATION_DATETIME_MINUTES_SMS);        //return "true";    }    static function minutesSurvey() {        return dbConfig::getProperty(CONFIGURATION_DATETIME, CONFIGURATION_DATETIME_MINUTES_SURVEY);        //return "true";    }    /* SESSION HANDLING */    static function warnTimeout() {        return dbConfig::getProperty(CONFIGURATION_SESSION, CONFIGURATION_SESSION_WARN);        //return 2; // 1=yes, 2=no    }    static function sessionTimeout() {        return dbConfig::getProperty(CONFIGURATION_SESSION, CONFIGURATION_SESSION_TIMEOUT);        //return 1800; // in seconds: 1800=30 minutes;    }    static function sessionLogoutURL() {        return dbConfig::getProperty(CONFIGURATION_SESSION, CONFIGURATION_SESSION_LOGOUT);        //return 'https://cesr.usc.edu/panel/index.php';    }    static function sessionRedirectURL() {        return dbConfig::getProperty(CONFIGURATION_SESSION, CONFIGURATION_SESSION_REDIRECT);        //return 'https://cesr.usc.edu/panel/index.php';    }        static function sessionExpiredPingInterval() {        return dbConfig::getProperty(CONFIGURATION_SESSION, CONFIGURATION_SESSION_PING);        // in milliseconds: check every 5 seconds if action was done        //return 5000;    }            /* VALIDATION */        static function getMinimumPrimaryKeyLength() {        return 0;    }        /*  LOGGING */    static function logParams() {        return (DbConfig::getProperty(CONFIGURATION_LOGGING, CONFIGURATION_LOGGING_PARAMS)) == 1; // 1=YES            //return false;    }    static function logSurveyActions() {        return (DbConfig::getProperty(CONFIGURATION_LOGGING, CONFIGURATION_LOGGING_ACTIONS)) == 1; // 1=YES            //return true;    }    static function logSurveyTimings() {        return (DbConfig::getProperty(CONFIGURATION_LOGGING, CONFIGURATION_LOGGING_TIMINGS)) == 1; // 1=YES            //return true;    }        // log tab switch or not    static function logTabSwitch() {        return (DbConfig::getProperty(CONFIGURATION_LOGGING, CONFIGURATION_LOGGING_TABSWITCH)) == 1; // 1=YES            //return false;    }    // log paradata    static function logParadata() {        return (DbConfig::getProperty(CONFIGURATION_LOGGING, CONFIGURATION_LOGGING_PARADATA)) == 1; // 1=YES            //return PARADATA_NO;    }        static function logParadataMouseMovement() {        return (DbConfig::getProperty(CONFIGURATION_LOGGING, CONFIGURATION_LOGGING_MOUSE)) > 0; // 1=YES            //return false;    }    static function logParadataMouseMovementInterval() {        return (DbConfig::getProperty(CONFIGURATION_LOGGING, CONFIGURATION_LOGGING_MOUSE)); // 1=YES            //return 5000;    }                static function getMaximumPrimaryKeyLength() {        return 20;    }        static function graphStartDate() {        return strtotime("2014-10-13");    }    /* INTERACTION */    static function allowRadioButtonUnselect() {        return true;    }    static function individualDKRFNA() {        return INDIVIDUAL_DKRFNA_YES;    }    static function individualDKRFNASingle() {        return INDIVIDUAL_DKRFNA_NO;    }    static function individualDKRFNAInline() {        return INDIVIDUAL_DKRFNA_NO;    }}?>